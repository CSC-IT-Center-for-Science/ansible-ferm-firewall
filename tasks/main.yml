---
- name: Install requirements
  action:
    module: "{{ ansible_pkg_mgr }}"
    name: "ferm,iptables"
    state: present

- name: Ferm | Disable other iptable frontends
  service:
    name: "{{ item }}"
    state: stopped
    enabled: no
  with_items: "{{ disable_other_firewalls }}"
  ignore_errors: True

- name: Ferm | Display rules var
  debug:
    var: ferm_rules
    verbosity: 1

- name: Ferm | Make sure the directory for firewall rules exist
  file:
    path: /etc/ferm
    state: directory
    owner: root
    group: root

- name: Ferm | Create config directory
  file:
    path: /etc/ferm/ferm.d
    state: directory
    owner: root
    group: root

- name: Ferm | Include ferm.d directory
  lineinfile:
    dest: /etc/ferm.conf
    line: '@include "/etc/ferm/ferm.d/";'
    regexp: '^\@include'
    backup: yes
    insertbefore: BOF
    create: yes
  check_mode: no

- name: Find ferm backup files
  find:
    paths:      "/etc/ferm/ferm.d/"
    patterns:   "*~,*.bak"
  register: ferm_backup_files

- name: Remove the found ferm backup files
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ ferm_backup_files.files }}"

- name: Ferm | Create the default ferm conf files
  template:
    src: ferm.conf.j2
    dest: "/etc/ferm/ferm.d/{{item.key}}.conf"
    mode: 0655
    owner: root
    group: root
    backup: no
  with_dict: "{{ ferm_rules }}"
  notify:
    - reload ferm

- name: Ferm | Create extra ferm conf files
  template:
    src: ferm.conf.j2
    dest: "/etc/ferm/ferm.d/{{item.key}}.conf"
    mode: 0655
    owner: root
    group: root
    backup: no
  with_dict: "{{ ferm_rules_extra | default({}) }}"
  notify:
    - reload ferm
  when: ferm_rules_extra

- name: Flush handlers
  meta: flush_handlers

- name: Ferm | Reload ferm
  service:
    name: ferm
    state: restarted
  when: fermreloaded is defined

- name: Ferm | Enable ferm on boot
  service:
    name: ferm
    enabled: yes

- name: Ferm | If ferm_fail2ban is True - restart fail2ban as well if ferm is reloaded
  service:
    name: fail2ban
    state: restarted
  when: fermreloaded is defined and ferm_fail2ban
